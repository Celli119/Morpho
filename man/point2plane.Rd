% Generated by roxygen2 (4.0.2): do not edit by hand
\name{point2plane}
\alias{point2plane}
\alias{point2plane.default}
\alias{point2plane.matrix}
\title{projects a 3D coordinate orthogonally onto a plane}
\usage{
point2plane(x, pt, pNorm = NULL, pt1 = NULL, pt2 = NULL)

\method{point2plane}{default}(x, pt, pNorm = NULL, pt1 = NULL, pt2 = NULL)

\method{point2plane}{matrix}(x, pt, pNorm = NULL, pt1 = NULL, pt2 = NULL)
}
\arguments{
\item{x}{3D-vector}

\item{pt}{point on plane}

\item{pNorm}{plane normal (overrides specification by pt1 and pt2)}

\item{pt1}{if pNorm=NULL, the plane will be defined by three points \code{pt, pt1, pt2}}

\item{pt2}{if pNorm=NULL, the plane will be defined by three points \code{pt, pt1, pt2}}
}
\value{
projected point
}
\description{
projects a 3D coordinate orthogonally onto a plane
}
\examples{
data(boneData)
##project rhinion onto plane spanned by Nasion and both Nariales
rpro <- point2plane(boneLM[10,,1],pt=boneLM[9,,1],pt1=boneLM[3,,1],pt2=boneLM[4,,1])

\dontrun{
require(rgl)
#visualize
wire3d(skull_0144_ch_fe.mesh,col="white")
##get plane normal
pNorm <- crossp(boneLM[3,,1]-boneLM[9,,1],boneLM[4,,1]-boneLM[9,,1])
pNorm <- pNorm/norm(pNorm,"2")
## get plane offset
d <- norm(point2plane(c(0,0,0),pt=boneLM[9,,1],pNorm=pNorm),"2")
spheres3d(boneLM[,,1],radius=0.5)
spheres3d(boneLM[c(3,4,9),,1],radius=0.6,col=3)
##original position of Rhinion
spheres3d(boneLM[10,,1],radius=0.6,col=2)
##projected onto plane
spheres3d(rpro,radius=0.9,col=6)
lines3d(rbind(rpro,boneLM[10,,1]),lwd=3)
##plot plane
planes3d(pNorm[1],pNorm[2],pNorm[3],d=d,col=2,alpha=0.5)

##now we project all points onto that plane:
spheres3d(point2plane(boneLM[,,1],pt=boneLM[9,,1],pt1=boneLM[3,,1],pt2=boneLM[4,,1]),col=3)

## and finally project the vertices of the mesh onto the plane
meshpro <- point2plane(vert2points(skull_0144_ch_fe.mesh),pt=boneLM[9,,1],pNorm=pNorm)
points3d(meshpro,col=2)
}
}

